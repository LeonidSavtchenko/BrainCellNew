
// !!! remove the underscore in name once we get rid of "create ExtracellularSource"
begintemplate ExtracellularSource_

    public species, enumPointBall, enumStaticSwitchSpike, x, y, z, radiusOrMinus1
    public s
    
    external codeContractViolation
    
    strdef species
    enumPointBall = -1
    enumStaticSwitchSpike = -1
    x = -1
    y = -1
    z = -1
    radiusOrMinus1 = -1     // For ball shape only
    
    // !!! add speciesIdx, startTime, endTime, spikeTime, isSeries
    
    strdef s
    
    
    proc init() { local numArg
        
        numArg = numarg()
        if (numArg < 6 || numArg > 7) {
            codeContractViolation()
        }
        
        species = $s1
        enumPointBall = $2
        enumStaticSwitchSpike = $3
        x = $4
        y = $5
        z = $6
        
        if (numArg == 7) {
            radiusOrMinus1 = $7
        } else {
            radiusOrMinus1 = -1
        }
        
        if (enumPointBall == (radiusOrMinus1 == -1)) {
            codeContractViolation()
        }
        
        prepareShownString()
    }
    
    // All next staff is private
    
    
    proc prepareShownString() {
        strdef dynamicsName, lengthUnits
        
        if (enumStaticSwitchSpike == 0) {
            dynamicsName = "static"
        } else if (enumStaticSwitchSpike == 1) {
            dynamicsName = "on-off"
        } else if (enumStaticSwitchSpike == 2) {
            dynamicsName = "spike"
        } else {
            codeContractViolation()
        }
        
        lengthUnits = units("L")
        
        if (enumPointBall == 0) {
            sprint(s, "%s / point / %s / c={%g, %g, %g} %s", species, dynamicsName, x, y, z, lengthUnits)
        } else if (enumPointBall == 1) {
            sprint(s, "%s / ball / %s / c={%g, %g, %g} %s, r=%g %s", species, dynamicsName, x, y, z, lengthUnits, radiusOrMinus1, lengthUnits)
        } else {
            codeContractViolation()
        }
    }
    
endtemplate ExtracellularSource_
