
proc getGlobalVarsHint() {
    $s1 = "The only exception is for GLOBAL variables. Any changes to them are applied immediately."
}

proc oneZeroToYesNo() { local oneOrZero
    oneOrZero = $1
    if (oneOrZero) {
        $s2 = "YES"
    } else {
        $s2 = "NO"
    }
}

proc createEmptyPanel() { local numArg, numLabels, labelIdx
    numArg = numarg()
    if (numArg == 0) {
        numLabels = 0
    } else if (numArg == 1) {
        numLabels = $1
    } else {
        codeContractViolation()
    }
    xpanel("")
    for labelIdx = 0, numLabels - 1 {
        xlabel("")
    }
    xpanel()
}

proc createElasticSpacer() { localobj deck
    // It turns out that Deck with just 1 card is the best choice when we want to create a panel
    // containing a few elements on the top so that (1) all remaining space below was filled in cyan
    // and (2) the cyan area stretched when user made the widget higher
    // Here are some alternatives and their cons:
    //  Empty xpanel or VBox + empty xpanel: don't fill the remaining space below in cyan
    //  xpanel + several empty xlabel-s: doesn't stretch when user makes widget higher
    //  HBox + empty xpanel: gives thicker edges compared to Deck
    deck = new Deck()
    deck.intercept(1)
    {
        createEmptyPanel()
    }
    deck.intercept(0)
    deck.flip_to(0)
    deck.map()
}

obfunc openDeck() { localobj deck
    deck = new Deck()
    deck.intercept(1)
    return deck
}

proc closeDeck() { local cardIdx, width, height localobj deck
    deck = $o1
    cardIdx = $2
    width = $3
    height = $4
    deck.intercept(0)
    deck.flip_to(cardIdx)
    deck.map("", 0, 0, width, height)
}

proc createMetaVarHint() {
    xlabel("* \"@\" means a meta variable; it's not a part of the standard \"NetCon\" class,")
    xlabel("   but rather used by our program to filter events emitted by \"NetCon\"-s")
}

proc dismissIfNotNil() { localobj widget, nil
    widget = $o1
    if (widget != nil) {
        widget.dismissHandler()
    }
}

proc unmapIfNotNil() { localobj mainBox, nil
    mainBox = $o1
    if (mainBox != nil) {
        mainBox.unmap()
    }
}
