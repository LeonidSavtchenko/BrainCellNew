
proc makeSureMechCompsCreatedOrImported() { codeContractViolation() }
proc makeSureSynCompsCreatedOrImported() { codeContractViolation() }

begintemplate InterModularCompUtils

    public makeSureAllCompsCreatedOrImported, getNumDistMechComps, getComp
    
    external mmAllComps, smAllComps
    external isAstrocyteOrNeuron
    external makeSureMechCompsCreatedOrImported, makeSureSynCompsCreatedOrImported
    
    
    // !! not intermodular actually
    proc makeSureAllCompsCreatedOrImported() { localobj nil
        makeSureMechCompsCreatedOrImported()
        if (!isAstrocyteOrNeuron) {
            makeSureSynCompsCreatedOrImported()
        }
    }
    
    // !! not intermodular actually
    func getNumDistMechComps() {
        return mmAllComps.count()
    }
    
    obfunc getComp() { local isDmOrSynPart, compIdx
        isDmOrSynPart = $1
        compIdx = $2
        if (isDmOrSynPart) {
            return mmAllComps.o(compIdx)
        } else {
            return smAllComps.o(compIdx)
        }
    }
    
endtemplate InterModularCompUtils


objref compUtils
compUtils = new InterModularCompUtils()
