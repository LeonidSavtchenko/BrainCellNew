
{ load_file("SectionListUtils.hoc") }


// Plugin for CompSubsetWidget from NanoBranchesManager module
begintemplate PluginForCSW_FromNBM

    external nanoBranchesManager, seededDendrites_ref
    external checkIfCurrentSecIsDendrite
    
    public getTopHint, isCurrentSectSelectable, doneHandler, dismissHandler
    
    proc getTopHint() {
        $s1 = "Please select dendrites that will be seeded with nanostructures."
    }
    
    func isCurrentSectSelectable() {
        // Check if the section belongs to a dendrite
        return checkIfCurrentSecIsDendrite()
    }
    
    proc doneHandler() { localobj selected_ref
        selected_ref = $o1
        
        // Here is the result of selection
        seededDendrites_ref = selected_ref
        
        // !! do I need to re-calculate MaxDendriticLength using seededDendrites_ref?
        nanoBranchesManager.reseedBranchesWithLastUsedArgs()
    }
    
    proc dismissHandler() {
        // !! maybe need to inform user that we'll reseed rather than restore the old nanostructures
        nanoBranchesManager.reseedBranchesWithLastUsedArgs()
    }
    
endtemplate PluginForCSW_FromNBM


// Plugin for CompSubsetWidget from MechManager module
begintemplate PluginForCSW_FromMM

    external mmcoWidget
    external stringsEqual
    
    public getTopHint, isCurrentSectSelectable, doneHandler, dismissHandler
    
    objref selectable_ref
    
    proc getTopHint() {
        $s1 = "Please select sections that will be removed from this and assigned to a new compartment."
    }
    
    proc init() {
        selectable_ref = $o1
    }
    
    func isCurrentSectSelectable() { local secIdx localobj sec_ref
        strdef secName1, secName2
        
        secName1 = secname()
        
        // !! slow and inefficient implementation, just for demo
        //    need to use Python's Set here
        for secIdx = 0, selectable_ref.count() - 1 {
            sec_ref = selectable_ref.o(secIdx)
            sec_ref.sec secName2 = secname()
            if (stringsEqual(secName1, secName2)) {
                return 1
            }
        }
        return 0
    }
    
    proc doneHandler() { localobj selected_ref
        selected_ref = $o1
        
        // !!
        mmcoWidget.splitHandler_layer2(selected_ref)
    }
    
    proc dismissHandler() {
        // !! maybe nothing here
    }
    
endtemplate PluginForCSW_FromMM
