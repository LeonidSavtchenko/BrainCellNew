
// Total number of geometrical objects
// !! maybe SizeTotal is deprecated for now (because it changes dynamically). so need to remove it everywhere?
// !! direct usage of MaxNumberStalksPerDendrite and MaxNumberSpinesPerDendrite in cycles is also deprecated
// !! maybe replace MaxNumberStalksPerDendrite and MaxNumberSpinesPerDendrite with one MaxNumberNanoBranchesPerDendrite
if (isAstrocyteOrNeuron) {
    SizeTotal = -1 // !! NumberDendrites * MaxNumberStalksPerDendrite * NumberLeavesPerStalk
} else {
    // SizeTotal = -1 // !! NumberDendrites * MaxNumberSpinesPerDendrite
}

// Number of Gaps distributed in the model astrocyte
GapJunctionMaxNumber = NumberDendrites+1
objref gaps[GapJunctionMaxNumber]

// Sets default initial params to soma and dendrites which doesn't depend on simulation.
proc setSomaDendrCommonParams() {
    soma_ref.o(0).sec {
        Ra = 100                // Ohm cm
        cm = 0.8                // uF/cm2
        nseg = 10
        insert pas
        e_pas = -85             // mV
        g_pas = 1/11150         // mS/cm2
        insert k_ion
        ko_k_ion=3
        ki_k_ion=110
        
        //insert ip3diffus
        insert kir4
        gkir_kir4=0
        
        for i = 2, NumberDendrites {
            gaps[i] = new Gap(0.5)
            gaps[i].r = 100000
            setpointer gaps[i].vgap, v(0.5)
        }
    }
// LengthControl=0
// diameterControl=0
    for i = 0, NumberDendrites-1 dendrite_ref.o(i).sec {
    // if (i < 132 ) {
    // LengthControl=LengthControl+dendrite_ref.o(i).sec.L
    
    // print i,LengthControl, diameterControl, dendrite_ref.o(i).sec.diam
    // }
        Ra = 100                // Ohm cm
        cm = 0.8                // uF/cm2
        nseg = 10
        
        insert pas
        e_pas = -85             // mV
        g_pas = 1/11150         // mS/cm2
        
        insert k_ion
        ko_k_ion=3
        ki_k_ion=110
        
        insert kir4
        gkir_kir4=0 
        
        //insert ip3diffus
        gaps[1] = new Gap(0.5)
        gaps[1].r = 100000
        setpointer gaps[1].vgap, v(0.5)
    }

    // Gap junction inside the astrocite
    for i = 0, NumberDendrites-2 dendrite_ref.o(i).sec {    // !! why -2?
        setpointer gaps[2+i].vgap, dendrite_ref.o(i).sec.v(0.5)
    }
    setpointer gaps[1].vgap, soma_ref.o(0).sec.v(0.5)
}

// Initial all the cell parameters.
proc initCell() {
    setSomaDendrCommonParams()
    if (isAstrocyteOrNeuron) {
        // !!
        // nanoBranchesManager.reseedBranches()
        /* !!
        createAllStalksWithLeaves()
        addLeaves(MinDistance)
        setLeavesCommonParams()
        */
    }
}

// initCell()