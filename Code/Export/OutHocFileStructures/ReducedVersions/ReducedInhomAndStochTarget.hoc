
begintemplate ReducedInhomAndStochTarget

    public makeInhom, makeOrUpdateStoch, applyBiophysInhomogeneity
    public enumDmPpNc, compIdx, mechIdx, varType, varIdx, arrayIndex
    public segmentationHelper, distFuncHelper, boundingHelper, stochFuncHelper
    public isInhom, distFuncCatIdx, distFuncIdx, isStoch, stochFuncCatIdx, stochFuncIdx
    
    external mmAllComps
    external codeContractViolation
    
    // "init" args
    enumDmPpNc = -1
    compIdx = -1
    mechIdx = -1
    varType = -1
    varIdx = -1
    arrayIndex = -1
    
    // "make*" args
    objref segmentationHelper, distFuncHelper
    objref boundingHelper, stochFuncHelper
    isInhom = -1
    distFuncCatIdx = -1
    distFuncIdx = -1
    isStoch = -1
    stochFuncCatIdx = -1
    stochFuncIdx = -1
    
    
    proc init() {
        enumDmPpNc = $1
        compIdx = $2
        mechIdx = $3
        varType = $4
        varIdx = $5
        arrayIndex = $6
    }
    
    proc makeInhom() {
        segmentationHelper = $o1
        distFuncHelper = $o2
        distFuncCatIdx = $3
        distFuncIdx = $4
        isInhom = 1
    }
    
    proc makeOrUpdateStoch() {
        boundingHelper = $o1
        stochFuncHelper = $o2
        stochFuncCatIdx = $3
        stochFuncIdx = $4
        isStoch = 1
    }
    
    // Keep in sync with MechComp.applySegmentationAndInhomogeneity
    proc applyBiophysInhomogeneity() { local secIdx, x, dist, y localobj mechType, mechStd, list_ref
        strdef mechName, varName
        
        if (enumDmPpNc != 0 || !isInhom || varType == -1) { // -1: "GLOBAL"
            codeContractViolation()
        }
        
        mechType = new MechanismType(0)     // 0: "Distributed Membrane Mechanisms"
        mechType.select(mechIdx)
        mechType.selected(mechName)
        
        mechStd = new MechanismStandard(mechName, varType)
        mechStd.name(varName, varIdx)
        
        list_ref = mmAllComps.o(compIdx).list_ref
        
        distFuncHelper.onJustBeforeFirstSection()
        for secIdx = 0, list_ref.count() - 1 {
            list_ref.o(secIdx).sec {
                distFuncHelper.onNewSection()
                for (x, 0) {
                    mechStd.in(x)
                    dist = distance(x)
                    y = distFuncHelper.calculateAt(dist)
                    mechStd.set(varName, y, arrayIndex)
                    mechStd.out(x)
                }
            }
        }
        distFuncHelper.onJustAfterLastSection()
    }
    
endtemplate ReducedInhomAndStochTarget
