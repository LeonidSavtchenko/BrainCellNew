
begintemplate DefineGridForInputVarWidget

    public show, dismissHandler
    
    external math, mwh
    external unmapIfNotNil
    
    objref mainBox
    objref parentWidget
    
    isLinOrExpGrid = -1
    firstValue = -1
    lastValue = -1
    numPts = -1
    
    
    proc init() { local inf
        parentWidget = $o1
        
        isLinOrExpGrid = 1
        
        firstValue = 1.2
        lastValue = 3.4
        numPts = 10
        
        inf = math.inf
        variable_domain(&numPts, 2, inf)
    }
    
    proc show() {
        mainBox = new VBox()
        mainBox.intercept(1)
        {
            xpanel("")
            xlabel("Grid type:")
            xradiobutton("Linear:          next = prev + delta", "isLinOrExpGrid = 1", isLinOrExpGrid == 1)
            xradiobutton("Exponential: next = prev * delta", "isLinOrExpGrid = 0", isLinOrExpGrid == 0)
            xlabel("")
            xpvalue("First value", &firstValue, 1)
            xpvalue("Last value", &lastValue, 1)
            xpvalue("Number of points", &numPts, 1)
            xlabel("")
            xbutton("OK", "okHandler()")
            xpanel()
        }
        mainBox.intercept(0)
        mainBox.dismiss_action("dismissHandler()")
        mainBox.map("Variable grid", 470, 360, -1, -1)
    }
    
    proc dismissHandler() {
        unmapIfNotNil(mainBox)
    }
    
    // All next staff is private
    
    
    proc okHandler() {
        // The case when lastValue == firstValue is considered valid because
        // user may just want to run the same simulation a few times
        
        if (!isLinOrExpGrid && firstValue * lastValue <= 0 && lastValue != firstValue) {
            mwh.showWarningBox("Invalid exponential grid: firstValue * lastValue <= 0")
            return
        }
        
        dismissHandler()
        parentWidget.onDefineVarGridOkHandler()
    }
    
endtemplate DefineGridForInputVarWidget
