
begintemplate ItemOfInputVarsBrowsedList
    
    public enumSpDmCe, compIdx, mechIdx, varType, varNameWithIndex, customExpr
    public s
    
    external mth, compUtils
    external codeContractViolation
    
    enumSpDmCe = -1     // 0: "Synapse part", 1: "Distributed mechanism", 2: "Custom expression"
    compIdx = -1
    mechIdx = -1
    varType = -1
    strdef varNameWithIndex, customExpr
    
    strdef s
    
    
    proc init() { local numArg
        numArg = numarg()
        
        if (numArg == 1) {
            enumSpDmCe = 2
            customExpr = $s1
        } else if (numArg == 5) {
            enumSpDmCe = $1
            compIdx = $2
            mechIdx = $3
            varType = $4
            varNameWithIndex = $s5
        } else {
            codeContractViolation()
        }
        
        prepareShownString()
    }
    
    proc prepareShownString() { local isDmOrSynPart, enumDmPpNc localobj comp
        strdef compTypeName, compName, mechName, varTypeName
        
        if (enumSpDmCe == 0) {
            compTypeName = "Syn"
        } else if (enumSpDmCe == 1) {
            compTypeName = "Bio"
        } else if (enumSpDmCe == 2) {
            compTypeName = "Cust"   // Keep in sync with enterVarExpression
        } else {
            codeContractViolation()
        }
        
        if (enumSpDmCe != 2) {
            isDmOrSynPart = enumSpDmCe
            comp = compUtils.getComp(isDmOrSynPart, compIdx)
            compName = comp.name
            mth.getVarTypeName(varType, varTypeName)
            enumDmPpNc = comp.enumDmPpNc
            if (enumDmPpNc != 2) {
                mth.getMechName(enumDmPpNc, mechIdx, mechName)
                sprint(s, "%s: %s \\ %s \\ %s \\ %s", compTypeName, compName, mechName, varTypeName, varNameWithIndex)
            } else {
                sprint(s, "%s: %s \\ %s \\ %s", compTypeName, compName, varTypeName, varNameWithIndex)
            }
        } else {
            sprint(s, "%s: %s", compTypeName, customExpr)   // Keep in sync with enterVarExpression
        }
    }
    
endtemplate ItemOfInputVarsBrowsedList
