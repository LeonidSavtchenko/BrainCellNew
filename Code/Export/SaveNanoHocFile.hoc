
// Save nanogeometry HOC file
func saveNanoHocFile() { local isSelected
    strdef filePathName
    
    isSelected = selectNanoHocFile("w", "Save", filePathName)    // !! maybe propose default file name in style "<imported_name>_nano.hoc"
    if (!isSelected) {
        return 1
    }
    
    _exportCellToHocFile(filePathName)
    
    return 0
}


proc _exportCellToHocFile() { local cond
    strdef outHocFilePathName, line1, line2, line3, line4, line5, line6, line7, line8, line9, line10, line11, line12
    
    outHocFilePathName = $s1
    
    mwh.showPleaseWaitBox("Exporting nanogeometry file.")
    {
        callPythonExportCore(outHocFilePathName)
    }
    mwh.hidePleaseWaitBox()
    
    mwh.startIntercepting()
    {
        line1 = "Here is what we don't export at the moment (the list is incomplete):"
        line2 = "    * GLOBAL vars of biophys mechs%s"
        line3 = "    * %sPPs/ACs%s, e.g. gap junctions in Soma and Dendrites%s"
        if (isAstrocyteOrNeuron) {
            sprint(line2, line2, "")
            sprint(line3, line3, "", "", "")
        } else {
            sprint(line2, line2, " and synaptic PPs/ACs")
            sprint(line3, line3, "custom ", " (outside synapses)", " and Point3DRelease in Extracellular Source")
        }
        line4 = "    * celsius, v_init, dt"
        line5 = "    * the distance centre location (if you change it)"
        cond = exportOptions.isExportAnyStochFuncs()
        if (!isAstrocyteOrNeuron) {
            cond = (cond || smEnumSynLoc == 2)  // smEnumSynLoc is not defined for Astrocyte
        }
        if (cond) {
            line6 = "    * states of RNGs"
        }
        line7 = "    * if creating \"runner.hoc\", the times recorded by APCount-s are not saved"
        line8 = "    * if creating \"runner.hoc\", the results cannot be saved to BIN file (only TXT file is supported)"
        line9 = "    * a new file \"nrnmech.dll\" is not built (only the old one is copied)"
        line10 = ""
        line11 = "Not implemented."
        line12 = "If required, please ask the developer to prioritize."
        if (cond) {
            mwh.showWarningBox(line1, line2, line3, line4, line5, line6, line7, line8, line9, line10, line11, line12)
        } else {
            mwh.showWarningBox(line1, line2, line3, line4, line5, line7, line8, line9, line10, line11, line12)
        }
        
        mwh.showMessageBox("Export complete successfully", "Complete")
    }
    mwh.endIntercepting()
}
