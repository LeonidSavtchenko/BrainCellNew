
{ load_file("../../Core/Widgets/alt_stdrun.hoc") }
{ load_file("../../Core/Widgets/AltRunControlWidget.hoc") }


begintemplate MechOrSynManagerBaseWidget

    public show, showMechManagerHandler, showSynManagerHandler, showAltRunControlHandler, onReseedHandler, dismissHandler
    public synManagerMainWidget
    
    external mmAllComps, smAllSyns, synGroup
    external mwh
    external dismissIfNotNil
    
    objref mainBox, this
    objref mechManagerMainWidget, synManagerMainWidget, altRunControlWidget
    
    isMechOrSyn = -1
    
    
    proc init() {
        isMechOrSyn = $1
    }
    
    proc show() {
        mainBox = new VBox()
        mainBox.intercept(1)
        {
            xpanel("")
            if (isMechOrSyn) {
                xbutton("Show Mech Manager", "showMechManagerHandler()")
            } else {
                xbutton("Show Syn Manager", "showSynManagerHandler()")
            }
            xbutton("Show Alt Run Control", "showAltRunControlHandler()")
            xpanel()
        }
        mainBox.intercept(0)
        mainBox.dismiss_action("dismissHandler()")
        mainBox.map("Base widget", 25, 575, -1, -1)
    }
    
    proc showMechManagerHandler() {
        dismissIfNotNil(mechManagerMainWidget)
        
        if (mmAllComps.count() == 0) {
            mwh.showWarningBox("Cannot open the manager of distributed mechanisms because there are no compartments.")
            return
        }
        
        execute("mechManagerMainWidget = new MechManagerMainWidget()", this)
        mechManagerMainWidget.show()
        mechManagerMainWidget.mechOpSelectHandler()
    }
    
    proc showSynManagerHandler() { local isDisconnected, xMin, xMax localobj nil
        dismissIfNotNil(synManagerMainWidget)
        
        if (smAllSyns.count() == 0) {
            mwh.showWarningBox("Cannot open the manager of synapses because there are no synapses.")
            return
        }
        
        if (synManagerMainWidget == nil) {
            execute("synManagerMainWidget = new SynManagerMainWidget()", this)
        }
        
        isDisconnected = synGroup.getDistRange(&xMin, &xMax)
        if (isDisconnected) {
            mwh.showWarningBox("Cannot edit inhomogeneity in synapses", "because at least one synapse target section doesn't have a topological connection with the distance centre.")
            
            // !! overkill here: we don't need to prevent opening the widget because user might wanted to do smth unrelated to inhomogeneity
            return
        }
        
        synManagerMainWidget.show(xMin, xMax)
    }
    
    proc showAltRunControlHandler() {
        dismissIfNotNil(altRunControlWidget)
        altRunControlWidget = new AltRunControlWidget()
        altRunControlWidget.show()
    }
    
    proc onReseedHandler() {
        dismissIfNotNil(mechManagerMainWidget)
        dismissIfNotNil(synManagerMainWidget)
        // !! maybe need to mark mechs and syns dirty somehow to force rescan on opening the widgets once again
    }
    
    proc dismissHandler() {
        onReseedHandler()
        dismissIfNotNil(altRunControlWidget)
        mainBox.unmap()
    }
    
endtemplate MechOrSynManagerBaseWidget
