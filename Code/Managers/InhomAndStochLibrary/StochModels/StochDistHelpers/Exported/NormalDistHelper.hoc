
// https://www.neuron.yale.edu/neuron/static/new_doc/programming/math/random.html#Random.normal
// https://www.mathworks.com/help/stats/normal-distribution.html
// https://en.wikipedia.org/wiki/Normal_distribution

begintemplate NormalDistHelper

    public addParamsToPanel, calcPdf, calcCdf, getMean, getStdDev, setMeanOnStartPlaying, resetMeanOnStopPlaying, firstDice, exportParams, importParams
    
    external math
    external codeContractViolation
    
    objref parentWidget
    
    sigma = -1
    
    mean = -1   // Used only in "play" mode, otherwise 0
    
    
    proc init() {
        parentWidget = $o1
        setSigma(1e-3)
        mean = 0
    }
    
    proc addParamsToPanel() {
        xpvalue("sigma", &sigma, 1, "parentWidget.valueChangedHandler()")
    }
    
    func calcPdf() { local x, y
        x = $1
        
        y = 1 / (sigma * sqrt(2 * PI)) * exp(-0.5 * (x / sigma) ^ 2)
        
        return y
    }
    
    func calcCdf() { local x, y
        x = $1
        
        y = 0.5 * (1 + erf(x / (sigma * sqrt(2))))
        
        return y
    }
    
    func getMean() {
        return 0
    }
    
    func getStdDev() {
        return sigma
    }
    
    proc setMeanOnStartPlaying() {
        mean = $1
    }
    
    proc resetMeanOnStopPlaying() {
        mean = 0
    }
    
    func firstDice() { local variance localobj rng
        rng = $o1
        
        variance = sigma ^ 2
        return rng.normal(mean, variance)
    }
    
    proc exportParams() { localobj vecOfVals
        vecOfVals = $o1
        
        vecOfVals.resize(1)
        vecOfVals.x(0) = sigma
    }
    
    proc importParams() { localobj vecOfVals
        vecOfVals = $o1
        
        if (vecOfVals.size() != 1) {
            codeContractViolation()
        }
        setSigma(vecOfVals.x(0))
    }
    
    // All next staff is private
    
    
    proc setSigma() { local inf
        sigma = $1
        
        inf = math.inf
        variable_domain(&sigma, float_epsilon, inf)
    }
    
endtemplate NormalDistHelper
