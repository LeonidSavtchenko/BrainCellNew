
begintemplate VerbatimDistFuncHelper

    public selectedHandler, calculateAt, onJustBeforeFirstSection, onNewSection, onJustAfterLastSection, exportParams, importParams, dismissHandler
    public parentWidget
    
    external eachItemInList
    external codeContractViolation
    
    objref parentWidget
    
    objref vecOfVals
    valueIdx = -1
    isInCycle = -1
    
    
    // This ctor is called from MechComp ctor in contrast to other *DistFuncHelper-s created from InhomEditorSubWidget ctor
    proc init() { local arrayIndex, x, value localobj list_ref, tempMechStd, sec_ref
        strdef varName
        
        list_ref = $o1
        varName = $s2
        arrayIndex = $3
        tempMechStd = $o4
        
        vecOfVals = new Vector()
        
        for eachItemInList(sec_ref, list_ref) {
            sec_ref.sec for (x, 0) {
                tempMechStd.in(x)
                value = tempMechStd.get(varName, arrayIndex)
                vecOfVals.append(value)
            }
        }
        
        valueIdx = -1
        isInCycle = 0
    }
    
    func selectedHandler() {
        return 0
    }
    
    func calculateAt() { local y
        y = vecOfVals.x(valueIdx)
        valueIdx += 1
        return y
    }
    
    proc onJustBeforeFirstSection() {
        if (isInCycle) {
            codeContractViolation()
        }
        valueIdx = 0
        isInCycle = 1
    }
    
    proc onNewSection() {
        // Nothing here
    }
    
    // The only template where this proc does smth
    proc onJustAfterLastSection() {
        if (!isInCycle || valueIdx != vecOfVals.size()) {
            codeContractViolation()
        }
        valueIdx = -1
        isInCycle = 0
    }
    
    proc exportParams() { localobj listOfStrs
        $o1 = vecOfVals
        listOfStrs = $o2    // Not used
    }
    
    proc importParams() { localobj listOfStrs
        vecOfVals = $o1
        listOfStrs = $o2    // Not used
    }
    
    proc dismissHandler() {
        // Nothing here
    }
    
endtemplate VerbatimDistFuncHelper
