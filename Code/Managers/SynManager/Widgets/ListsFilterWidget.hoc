
begintemplate ListsFilterWidget

    public show, dismissHandler
    public filterLevel
    
    external unmapIfNotNil
    
    objref mainBox, deck
    objref lastParentWidget
    
    filterLevel = -1
    
    
    proc init() {
        filterLevel = 2     // 0: "No filtration", 1: "Minimum filtration", 2: "Maximum filtration"
    }
    
    proc show() {
        strdef text
        
        lastParentWidget = $o1
        
        mainBox = new VBox()
        mainBox.intercept(1)
        {
            xpanel("")
            xradiobutton("No filtration", "filterLevelChangedHandler(0)", filterLevel == 0)
            xradiobutton("Minimum filtration", "filterLevelChangedHandler(1)", filterLevel == 1)
            xradiobutton("Maximum filtration", "filterLevelChangedHandler(2)", filterLevel == 2)
            xlabel("")
            xbutton("OK", "okHandler()")
            xpanel()
            deck = new Deck()
            deck.intercept(1)
            {
                xpanel("")
                xlabel("All available PPs are shown, even incompatible.")
                xlabel("Warning: Be ready for the following errors:")
                xlabel("* No NET_RECEIVE in target PointProcess")
                xlabel("* ARTIFICIAL_CELLs are not located in a section")
                xlabel("as well as misbehaving without an explicit error.")
                xpanel()
                xpanel("")
                xlabel("Only compatible PPs are shown, even not synapses.")
                xpanel()
                xpanel("")
                xlabel("Only compatible PPs with \"syn\" in name are shown.")
                xpanel()
            }
            deck.intercept(0)
            deck.flip_to(filterLevel)
            deck.map()
        }
        mainBox.intercept(0)
        mainBox.dismiss_action("dismissHandler()")
        mainBox.map("Lists filter", 200, 450, -1, -1)
    }
    
    proc dismissHandler() {
        unmapIfNotNil(mainBox)
    }
    
    // All next staff is private
    
    
    proc filterLevelChangedHandler() {
        filterLevel = $1
        deck.flip_to(filterLevel)
        lastParentWidget.onListsFilterLevelChangedHandler(0)
    }
    
    proc okHandler() {
        dismissHandler()
    }
    
endtemplate ListsFilterWidget

objref smlfw
smlfw = new ListsFilterWidget()
