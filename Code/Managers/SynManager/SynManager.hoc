
begintemplate EnumSynCompIdxs
    
    public source, netCon, target, single
    
    source = -1
    netCon = -1
    target = -1
    single = -1
    
endtemplate EnumSynCompIdxs

objref enumSynCompIdxs
enumSynCompIdxs = new EnumSynCompIdxs()

objref smAllComps


{ load_file("SynManagerLoads.hoc") }


proc createSynComps() {
    smAllComps = new List()
    smAllComps.append(new SynPPComp("Source PP", 0))
    smAllComps.append(new SynNCComp())
    smAllComps.append(new SynPPComp("Target PP", 1))
    smAllComps.append(new SynPPComp("Single PP", 2))
    enumSynCompIdxs.source = 0
    enumSynCompIdxs.netCon = 1
    enumSynCompIdxs.target = 2
    enumSynCompIdxs.single = 3
}

proc createSynCompsAndShowSynManagerBaseWidget() { localobj nil

    if (isAstrocyteOrNeuron) {
        codeContractViolation()
    }
    
    if (smAllComps == nil) {
        createSynComps()
    }
    
    dismissIfNotNil(msmBaseWidget)
    msmBaseWidget = new MechOrSynManagerBaseWidget(0)
    msmBaseWidget.show()
    msmBaseWidget.showSynManagerHandler()
    msmBaseWidget.showAltRunControlHandler()
}
