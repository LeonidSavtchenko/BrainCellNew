
// Unzip the archive and rename the input SWC file
// $s1 - Input ZIP file path and name
// $s2 - Output folder path and name
// $s3 (Output) - The SWC file path and name
proc unzipArchiveAndRenameInputFile() { local status
    strdef inZipFilePathName, outFolderPathName, pyCommandTempl, pyCommand, outSwcFileName, outSwcFilePathName
    
    inZipFilePathName = $s1
    outFolderPathName = $s2
    
    // Unzip the archive and save to the temporary folder as a flat file list
    pyCommandTempl = "import zipfile\nimport os\nwith zipfile.ZipFile('%s', 'r') as inZipFile:\n    for membPathName in inZipFile.namelist():\n        membName = os.path.basename(membPathName)\n        if not membName:\n            continue\n        dstFilePathName = os.path.join('%s', membName)\n        with inZipFile.open(membPathName) as srcMembFile, open(dstFilePathName, 'wb') as dstFile:\n            dstFile.write(srcMembFile.read())"
    sprint(pyCommand, pyCommandTempl, inZipFilePathName, outFolderPathName)
    
    status = runSysOrPyCommandWithWaitBox(pyCommand, 0, "Unzipping")
    if (!status) {
        printImportFailedMsgAndRaiseError("Cannot unzip the archive")
    }
    
    // Create a copy of the first "*.CNG.swc" file in just unzipped folder giving it fixed name
    outSwcFileName = "input_file.swc"
    copyAndRenameFirstSwcFile(outFolderPathName, outSwcFileName)
    
    sprint(outSwcFilePathName, "%s/%s", outFolderPathName, outSwcFileName)
    $s3 = outSwcFilePathName
}

// Create a copy of the first "*.CNG.swc" file in just unzipped folder giving it fixed name
// $s1 - The unzipped folder path and name
// $s2 - The destination file name
proc copyAndRenameFirstSwcFile() { local status, isMissing
    strdef folderPathName, outSwcFileName, outSwcFilePathName, pyCommandTempl, pyCommand
    
    folderPathName = $s1
    outSwcFileName = $s2
    
    sprint(outSwcFilePathName, "%s/%s", folderPathName, outSwcFileName)
    
    pyCommandTempl = "import glob\nimport shutil\nfor file in glob.glob('%s/*.CNG.swc'):\n    shutil.copy(file, '%s')\n    break"
    sprint(pyCommand, pyCommandTempl, folderPathName, outSwcFilePathName)
    
    status = nrnpython(pyCommand)
    if (!status) {
        printImportFailedMsgAndRaiseError("Cannot create a copy of the first \"*.CNG.swc\" file in just unzipped folder")
    }
    
    isMissing = checkIfFileMissing(outSwcFilePathName)
    if (isMissing) {
        printImportFailedMsgAndRaiseError("The archive doesn't contain any \"*.CNG.swc\" files")
    }
}

// Copy HOC file from the temporary folder to the specified location
// $s1 - The destination file path and name
proc copyHocFile() { local status
    strdef dstFilePathName, srcFilePathNameTempl, srcFilePathName, pyCommandTempl, pyCommand
    
    dstFilePathName = $s1
    
    srcFilePathNameTempl = "%s_Code/Import/temp_folder/last_converted.hoc"
    sprint(srcFilePathName, srcFilePathNameTempl, getcwd())
    
    pyCommandTempl = "import shutil\nshutil.copyfile('%s', '%s')"
    sprint(pyCommand, pyCommandTempl, srcFilePathName, dstFilePathName)
    
    status = nrnpython(pyCommand)
    if (!status) {
        printMsgAndRaiseError("Export Failed: Cannot save HOC file to the specified location")
    }
}
