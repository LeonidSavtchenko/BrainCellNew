
// Load and validate nanogeometry HOC file
// Returns: 0/1 flag indicating that the file was loaded successfully
//          $s1 (optional) - a HOC command to show the warning box
func loadNanoHocFile() { local isCancel, status
    
    isCancel = fbh.showLoadFileDialog(pyEnumInFileTypes.nanoGeometryHoc, mechsDllUtils.loadedNanoHocFilePathName)
    if (isCancel) {
        return 0
    }
    
    // !! if called from MainUi, then need to delete the old cell here (something like proc cleanupBeforeNextImport from Import module, but much more to cleanup)
    
    mwh.showPleaseWaitBox("Loading nanogeometry file.")
    {
        status = load_file(1, mechsDllUtils.loadedNanoHocFilePathName)
    }
    mwh.hidePleaseWaitBox()
    if (!status) {
        $s1 = "mwh.showWarningBox(\"Failed to load the nanogeometry file\")"
        deleteAllSections()
        return 0
    }
    
    if (!(isNanoCallbackReceived && name_declared("ReducedBasicMath"))) {   // Keep in sync with py:GeneratorsForMainHocFile.getUtils
        $s1 = "mwh.showWarningBox(\"Invalid Nano geometry file.\", \"Please make sure you don't load a Base geometry file or an External simulation this way.\")"
        deleteAllSections()
        return 0
    }
    // !! maybe extend this validation to make sure the next vars were created:
    //    isAstrocyteOrNeuron, soma_ref, dendrite_ref, axon_ref (for neuron only), nanoProximal_ref, nanoDistal_ref etc.
    
    return 1
}
