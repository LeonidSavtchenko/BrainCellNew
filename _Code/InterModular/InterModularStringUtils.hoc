
{ load_file("Exported/InterModularStringUtils_Exported.hoc") }

// Check if given string is empty
// $s1 - The string
// Returns 0/1 flag
func stringEmpty() { localobj strFuncs
    strFuncs = new StringFunctions()
    return strFuncs.len($s1) == 0
}

// Check if given string contains a substring
// $s1 - Input string
// $s2 - Substring to find
// Returns 0/1 flag
func containsSubstring() { localobj strFuncs
    strFuncs = new StringFunctions()
    return strFuncs.substr($s1, $s2) != -1
}

// Join two strings (i.e. concatenate with a separator)
// $s1 (in/out) - The first string
// $s2 - The second string
// $s3 - The separator (used only if $s1 is not empty)
proc joinStrings() {
    if (stringEmpty($s1)) {
        sprint($s1, "%s", $s2)  // !! would simple assignment be enough?
    } else {
        sprint($s1, "%s%s%s", $s1, $s3, $s2)
    }
}


// See also: stringToLowerCase, stringCapitalize, stringTruncate and stringEndsWith in InterModularPythonUtils.hoc
