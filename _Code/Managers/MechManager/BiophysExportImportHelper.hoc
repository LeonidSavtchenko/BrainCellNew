
// !!! compare with loadNanoHocFile
// !!! do we need to keep this on the top level?
func importBiophysHocFile() { local status
    strdef hocFilePathName
    
    hocFilePathName = $s1
    
    mwh.showPleaseWaitBox("Loading biophysics file.")
    {
        status = load_file(1, hocFilePathName)
    }
    mwh.hidePleaseWaitBox()
    
    if (!status) {
        // !!! mwh.showWarningBox("Failed to load the biophysics file")
        return 0
    }
    
    return 1
}

begintemplate BiophysExportImportHelper

    public export, import
    public export2, importCallback1, import2, importCallback2
    public importStageIdx
    
    external mmAllComps
    external importBiophysHocFile, stringsEqual
    external mwh, fbh
    external eachItemInList
    
    objref mmeibWidget
    
    strdef subDirName
    
    strdef hocFilePathName  // !!! ?? use two different vars for export and import?
    importStageIdx = -1
    
    
    proc init() {
        subDirName = "Biophysics"
        
        importStageIdx = -1
    }
    
    proc export() {
        mmeibWidget = $o1
        
        mmeibWidget.show(1)     // --> export2
    }
    
    proc export2() { local isCancel
        // !!! title dup. with proc import
        // !!! need to close it somehow once user closes any of parent widgets
        isCancel = fbh.showSaveFileDialog("Export brain cell biophysics", subDirName, hocFilePathName)
        if (isCancel) {
            return
        }
        
        // !!! call Python code here
        
        mmeibWidget.dismissHandler()
        
        mwh.showNotImplementedWarning()
    }
    
    proc import() { local isCancel, isOK
        mmeibWidget = $o1
        
        mmeibWidget.dismissHandler()
        
        // !!! title dup. with proc export2
        // !!! need to close it somehow once user closes any of parent widgets
        isCancel = fbh.showLoadFileDialog("Import brain cell biophysics", subDirName, hocFilePathName)
        if (isCancel) {
            return
        }
        
        importStageIdx = 0
        {
            isOK = importBiophysHocFile(hocFilePathName)    // --> importCallback1
        }
        importStageIdx = -1
        
        if (!isOK) {
            // !!!
        }
    }
    
    proc importCallback1() { local numInhomVars, numStochVars, numComps, compIdx, isFound localobj compNames, isUseThisCompNameVec, isBlockThisCompNameVec, missingCompNames, mechComp
        strdef compName, line1, line2
        
        compNames = $o1
        numInhomVars = $2
        numStochVars = $3
        isUseThisCompNameVec = $o4
        
        numComps = compNames.count()
        isBlockThisCompNameVec = new Vector(numComps)   // All zeros by default
        isUseThisCompNameVec.resize(numComps)
        
        missingCompNames = new List()
        for compIdx = 0, numComps - 1 {
            compName = compNames.o(compIdx).s
            isFound = 0
            for eachItemInList(mechComp, mmAllComps) {
                if (stringsEqual(compName, mechComp.name)) {
                    isFound = 1
                    break
                }
            }
            if (!isFound) {
                isBlockThisCompNameVec.x[compIdx] = 1
                missingCompNames.append(new String(compName))
            }
            isUseThisCompNameVec.x[compIdx] = isFound
        }
        
        mmeibWidget.show(0, compNames, numInhomVars, numStochVars, isBlockThisCompNameVec, isUseThisCompNameVec)    // --> import2
        
        if (missingCompNames.count() == 0) {
            return
        }
        
        line1 = "The following comps are declared in the imported file, but missing in the recipient cell, so cannot be imported:"
        line2 = "(You can use \"Rename\" or \"Split\" compartment operations and repeat the import.)"
        mwh.showWarningBox(line1, missingCompNames, "", line2, "")
    }
    
    proc import2() { local isOK
        importStageIdx = 1
        {
            isOK = importBiophysHocFile(hocFilePathName)    // --> importCallback2 !!!! do I need this?
        }
        importStageIdx = -1
        
        if (!isOK) {
            // !!!
        }
        
        mwh.showNotImplementedWarning()
    }
    
    // !!!! do I need this?
    proc importCallback2() {
        //mwh.showNotImplementedWarning()
    }
    
endtemplate BiophysExportImportHelper

objref beih
beih = new BiophysExportImportHelper()
