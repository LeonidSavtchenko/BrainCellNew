
begintemplate ECSSpatialInfo

    public isEqual, prepareShownString, packToVec, createShiftedCopy
    public enumPointSphere, x, y, z, radiusOrMinus1
    
    external codeContractViolation
    
    enumPointSphere = -1
    x = -1
    y = -1
    z = -1
    radiusOrMinus1 = -1     // For "sphere" shape only
    
    
    proc init() { local numArg
        
        numArg = numarg()
        if (numArg < 4 || numArg > 5) {
            codeContractViolation()
        }
        
        enumPointSphere = $1
        x = $2
        y = $3
        z = $4
        
        if (numArg == 5) {
            radiusOrMinus1 = $5
        } else {
            radiusOrMinus1 = -1
        }
        
        if (enumPointSphere == (radiusOrMinus1 == -1)) {
            codeContractViolation()
        }
    }
    
    func isEqual() { localobj other
        other = $o1
        
        return (enumPointSphere == other.enumPointSphere && x == other.x && y == other.y && z == other.z && radiusOrMinus1 == other.radiusOrMinus1)
    }
    
    proc prepareShownString() { local isSeriesOrMinus1 localobj seriesInfoOrNil
        strdef species, dynamicsName, lengthUnits, seriesIndication
        
        species = $s1
        dynamicsName = $s2
        isSeriesOrMinus1 = $3
        seriesInfoOrNil = $o4
        
        lengthUnits = units("L")
        
        if (isSeriesOrMinus1 == 1) {
            sprint(seriesIndication, " (series of %d)", seriesInfoOrNil.getNumImps())
        } else {
            seriesIndication = ""
        }
        
        if (enumPointSphere == 0) {
            // !!! think about showing "pointCapacityRadius"
            sprint($s5, "%s: point / %s%s / c={%g, %g, %g} %s", species, dynamicsName, seriesIndication, x, y, z, lengthUnits)
        } else if (enumPointSphere == 1) {
            sprint($s5, "%s: sphere / %s%s / c={%g, %g, %g} %s, r=%g %s", species, dynamicsName, seriesIndication, x, y, z, lengthUnits, radiusOrMinus1, lengthUnits)
        } else {
            codeContractViolation()
        }
    }
    
    obfunc packToVec() { localobj vec
        vec = new Vector(5)
        vec.x(0) = enumPointSphere
        vec.x(1) = x
        vec.x(2) = y
        vec.x(3) = z
        vec.x(4) = radiusOrMinus1
        return vec
    }
    
    obfunc createShiftedCopy() { local x_new, y_new, z_new
        x_new = $1
        y_new = $2
        z_new = $3
        
        if (enumPointSphere == 0) {
            return new ECSSpatialInfo(enumPointSphere, x_new, y_new, z_new)
        } else if (enumPointSphere == 1) {
            return new ECSSpatialInfo(enumPointSphere, x_new, y_new, z_new, radiusOrMinus1)
        } else {
            codeContractViolation()
        }
    }
    
endtemplate ECSSpatialInfo
