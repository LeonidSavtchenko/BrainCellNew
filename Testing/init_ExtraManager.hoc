
// Load some test nanogeometry file
{ load_file("CommonPrologueForTests.hoc") }

obfunc createTestPlotShape() { local y, slotIdx localobj plotShape
    strdef varName
    
    varName = $s1
    y = $2
    slotIdx = $3
    
    plotShape = new PlotShape(0)
    plotShape.variable(varName)
    plotShape.scale(2, 5)
    graphUtils.addPlotDynamicsMenuItem(plotShape, slotIdx, "Extracellular Concentration", varName, 1)
    plotShape.view(-300, -180, 770, 770, 745, y, 200, 200)
    plotShape.exec_menu("Shape Plot")
    plotShape.exec_menu("View = plot")
    fast_flush_list.append(plotShape)
    
    return plotShape
}

obfunc createTestGraph() { local y localobj graph
    strdef varName1, varName2
    
    varName1 = $s1
    varName2 = $s2
    y = $3
    
    graph = new Graph(0)
    graph.addvar(varName1, 2, 0)
    graph.addvar(varName2, 3, 0)
    graph.size(0, tstop, 2, 5)
    graph.view(0, 2, tstop, 5, 1030, y, 300, 200)
    graphList[0].append(graph)
    
    return graph
}

y1 = 150
y2 = 500

// !!! without this, the PlotShape-s will show the next sections in grey rather than in colour:
//     ExtracellularSource (testPlotShape1 and testPlotShape2), nanogeometry (testPlotShape2)
forall {
    insert ExtracellularDiffusionHelper
    
    // !!! just an alternative way to fix the grey sections problem
    // insert k_ion
    // insert ca_ion
}

// Watch extracellular concentration in space
objref testPlotShape1, testPlotShape2
testPlotShape1 = createTestPlotShape("ko", y1, 3)
testPlotShape2 = createTestPlotShape("cao", y2, 4)

tstop = 4

// Watch extracellular concentration in time
objref testGraph1, testGraph2
testGraph1 = createTestGraph("s.ko(0.5)", "dendA5_01111111111111111.ko(0.5)", y1)
testGraph2 = createTestGraph("s.cao(0.5)", "dendA5_0111110.cao(0.5)", y2)

{ load_file("../Code/Managers/CommonLoads.hoc") }   // !!! no need to load everything from this file
{ load_file("../Code/Extracellular/ExtracellularManager.hoc") }

showExtracellularManagerBaseWidget()

{ chdir("..") }     // Without this, getcwd() will return different path compared to the start from "init.hoc"
