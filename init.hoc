
// User choices made with "Roadmap" widget
isBaseOrNanoStart = -1      // 1 - base, 0 - nano
isAstrocyteOrNeuron = -1    // 1 - astrocyte, 0 - neuron

currentMechanismSetup = 0       // 0 - Electric mechanisms, 1 - Glutamate mechanisms
DensityGluTransporters = 1e12   // 1/um2

{ load_file("_Code/InterModular/AllInterModularUtils.hoc") }

objref mechsDllUtils
mechsDllUtils = new MechsDllUtils(getcwd())

proc prologueCompleteHandler() {
    load_file("_Code/Core/MainProgram.hoc")
    runMain()
}

proc roadmapChosenHandler() { local isLoaded localobj plotShape, nil
    strdef showWarningBoxHocCommand
    
    if (!isBaseOrNanoStart) {
        showWarningBoxHocCommand = ""
        isLoaded = loadNanoHocFile(showWarningBoxHocCommand)
        if (!isLoaded) {
            showRoadmapWidget()
            if (!stringEmpty(showWarningBoxHocCommand)) {
                execute(showWarningBoxHocCommand)
            }
            return
        }
    }
    
    load_file("_Code/Core/Utils.hoc")
    
    if (isBaseOrNanoStart) {
        load_file("_Code/Import/Import.hoc")
        if (isAstrocyteOrNeuron) {
            load_file("_Code/Prologue/Astrocyte/initAstrocyte.hoc")     // This will call prologueCompleteHandler() in the end
        } else {
            load_file("_Code/Prologue/Neuron/initNeuron.hoc")
            initNeuron()    // This will call prologueCompleteHandler() in the end
            // (Don't encapsulate initNeuron() into "initNeuron.hoc" because the file browser will use different default folder)
        }
    } else {
        if (!isAstrocyteOrNeuron && smAllSyns == nil) {
            printWasNotExportedSoWeWillCreateDefaultWarning("synapses")
            load_file("_Code/Prologue/Neuron/AddSynapses.hoc")
        }
        initVoltageAndRunControlParams()
        prologueCompleteHandler()
    }
}

{ load_file("_Code/RoadmapWidget.hoc") }

proc showRoadmapWidget() { localobj roadmapWidgetCopy
    // !!! not sure why this temporary copy is needed, but without it we'll catch Segmentation violation
    roadmapWidgetCopy = roadmapWidget
    
    roadmapWidget = new RoadmapWidget()
    roadmapWidget.show()
}

// Don't rename this proc to "init" because NEURON will call it once user clicks "Init & Run"
proc theEntryPoint() {

    // !! code dupl. with Import.hoc
    if (unix_mac_pc() != 3) {
        printMsgAndRaiseError("The importer works only on Windows")
    }
    if (!nrnpython("")) {
        printMsgAndRaiseError("Python is not available")
    }
    
    load_file("_Code/Export/ExportCoreLoads.hoc")
    
    // Calling here just to show up all the Python warnings early
    sourcePythonCodeForExport()
    
    showRoadmapWidget()
}

theEntryPoint()
